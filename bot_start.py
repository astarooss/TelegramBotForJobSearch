from aiogram.utils import executor  
from create_bot import dp, bot
from data_base import ps2_client, ps2_msg, ps2_rabota
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import hashlib, os
import config
import psycopg2 as ps
import asyncio
import aioschedule
import datetime
import requests
from bs4 import BeautifulSoup as bs
from aiogram.utils.markdown import hlink
from telegraph import Telegraph

WORK_LIST_REPLACE = [('–†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–µ','–†–∞–∑–Ω–æ—Ä–æ–±–æ—á–∏–π'), ('–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ','–°—Ç—Ä–æ–π–∫–∞'),('–ó–∞–≤–æ–¥—ã','–ó–∞–≤–æ–¥'),('–í–æ–¥–∏—Ç–µ–ª–∏','–í–æ–¥–∏—Ç–µ–ª—å'),('–†–µ—Å—Ç–æ—Ä–∞–Ω—ã','–†–µ—Å—Ç–æ—Ä–∞–Ω'),('–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞','–£–¥–∞–ª–µ–Ω–Ω–∞—è-—Ä–∞–±–æ—Ç–∞'),('–ú–µ–Ω–µ–¥–∂–µ—Ä—ã','–ú–µ–Ω–µ–¥–∂–µ—Ä'),('–î–æ–º–∞—à–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª','–î–æ–º–∞—à–Ω–∏–π-–ø–µ—Ä—Å–æ–Ω–∞–ª'),('–ë–µ–∑ –æ–ø—ã—Ç–∞','–ë–µ–∑-–æ–ø—ã—Ç–∞'),('–ú–∞–≥–∞–∑–∏–Ω','–ú–∞–≥–∞–∑–∏–Ω'),('–°—Ñ–µ—Ä–∞ —É—Å–ª—É–≥','–°—Ñ–µ—Ä–∞-—É—Å–ª—É–≥'),('–£—á–∏—Ç–µ–ª—è','–£—á–∏—Ç–µ–ª—å'),('–°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ','–°–µ–ª—å—Å–∫–æ–µ-—Ö–æ–∑—è–π—Å—Ç–≤–æ')]

base = ps.connect(os.environ.get('DATABASE_URL'), sslmode='require')
cur = base.cursor()

async def on_startup(dp):
    ps2_client.sql_start() #–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    ps2_rabota.sql_start_work()
    ps2_msg.sql_start_msg()
    asyncio.create_task(scheduler_chat())
    await bot.set_webhook(config.URL_APP)



async def auto_rabota():
    URL_TEMPLATE = 'https://layboard.com/vakansii/chehiya/rabota-v-prage'

    r = requests.get(URL_TEMPLATE)
    soup = bs(r.text, "html.parser")
    urll = soup.find('div', class_='job-filters__item jfilter-item js-filter-by-date').find('input', class_='jfilter-item__check-item-input')
    print(urll['value'])



    r = requests.get('https://layboard.com/vakansii/chehiya/rabota-v-prage?date=' + urll['value'])
    soup = bs(r.text, "html.parser")
    vacancies_names = soup.find_all('div', class_='vacancy-card')
    res_list = []
    n = 0
    bre = True
    while bre:
        res = vacancies_names[n].find('p', class_='vacancy-date')
        
        if res.text.find('–º–∏–Ω—É—Ç') != -1 or res.text.find('—Å–µ–∫—É–Ω–¥') != -1:
            res_list.append(vacancies_names[n])
            break
        n += 1
        if n == len(vacancies_names):
            break
    print(len(res_list))


    for name in res_list:
        url = name.a['href']
        r = requests.get('https://layboard.com' + url)
        soup = bs(r.text, "html.parser")
        name = soup.find('span', class_='jarticle__categories-item')
        price = soup.find('div', class_='jarticle__stat-value')
        number = soup.find('div', class_='jarticle__company-info-row')
        describe = soup.find('div', class_='jarticle__descrip')
        number = number.a['data-phone']
        name = name.text

        describe = describe.text[:describe.text.find('–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–º')]
        while True:
            if describe[-1] == '\n':
                describe = describe[:-1]
            else:
                break

        while True:
            if describe[0] == ' ':
                describe = describe[1:]
            else:
                break

        if describe[0:11] == '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:':
            describe = describe[11:]

        while True:
            if describe[0] == '\n':
                describe = describe[1:]
            else:
                break
        
        
        describe =  describe.replace('\n\n\n\n\n', '\n\n')
        describe =  describe.replace('\n\n\n\n', '\n\n')
        describe =  describe.replace('\n\n\n', '\n\n')

        for work_nam in WORK_LIST_REPLACE:
            name = name.replace(work_nam[0], work_nam[1])
        name = name.replace('\n','')

        if len(describe) > 750:
            deskr = f'üíµ–¶–µ–Ω–∞: {price.text}\n\nüìã–û–ø–∏—Å–∞–Ω–∏–µ: {describe}\n\n üì©–ö–æ–Ω—Ç–∞–∫—Ç—ã: {number}'
            deskr = deskr.replace('\n','<br>')

            

            conf = {'short_name': 'altruist',
                    'author_name': '–†–∞–±–æ—Ç–∞ –≤ –ü—Ä–∞–≥–µ, –ß–µ—Ö–∏–∏',
                    'author_url': 'https://t.me/work_in_prague',
                    'access_token': 'e27cca42f77f9745940df9f3cda5e61e499472387b6098ac433cf96e770b',
                    'auth_url': 'https://edit.telegra.ph/auth/VeQL6ZlrfaDqJTASRgWMNCkK31RvPtnIHctLbMaqUO'}

            telegraph = Telegraph(conf["access_token"]) 
            response = telegraph.create_page(
                name, 
                html_content=deskr,
                author_name=conf['author_name'], 
                author_url=conf['author_url']
            )
            url_page = 'https://telegra.ph/{}'.format(response['path'])

            link_page = hlink('...—á–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ', url_page)

            
            describe = describe[:500] + link_page
        
        link = hlink('–†–∞–±–æ—Ç–∞ –≤ –ü—Ä–∞–≥–µ, –ß–µ—Ö–∏–∏', 'https://t.me/work_in_prague')
        msg = await bot.send_message(chat_id=-1001509271122, text= f'üíº #{name}\n\nüíµ–ó–∞—Ä–ø–ª–∞—Ç–∞: {price.text}\n\nüìã–û–ø–∏—Å–∞–Ω–∏–µ: {describe}\n\nüì©–ö–æ–Ω—Ç–∞–∫—Ç—ã: {number}\n\n{link}', parse_mode='HTML', disable_web_page_preview=True)
        await bot.forward_message(from_chat_id=-1001509271122, chat_id=-1001869904593, message_id=msg.message_id)

async def auto_chat():
    keyboard = InlineKeyboardMarkup()
    button = InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞', url='https://t.me/rabota_praha_bot')
    button2 = InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª', url='https://t.me/work_in_prague')
    keyboard.add(button).add(button2)
    await bot.send_message(chat_id=-1001869904593, text= f'–ò—â–µ—Ç–µ —Ä–∞–±–æ—Ç—É –∏–ª–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç–µ –≤–∞–∫–∞–Ω—Å–∏–∏?\n\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –Ω–∞—à–∏–º –±–µ—Å–ø–∞–ª–∞—Ç–Ω—ã–º –±–æ—Ç–æ–º –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–∏ –≤–∞–∫–∞–Ω—Å–∏–∏\n\n–¢–∞–∫ –∂–µ –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤ –Ω–∞—à –∫–∞–Ω–∞–ª', reply_markup=keyboard)

async def auto_channel():
    keyboard = InlineKeyboardMarkup()
    button2 = InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å', url='https://t.me/alltruiist')
    keyboard.add(button2)
    await bot.send_message(chat_id=-1001509271122, text= f'–†–∞–∑–≤–∏–≤–∞–µ—Ç–µ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å?. –ù—É–∂–Ω—ã –∑–∞–∫–∞–∑—ã?\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –∑–∞ 500 –∫—Ä–æ–Ω –º—ã –≤—ã–ª–æ–∂–∏–º –≤–∞—à—É —Ä–µ–∫–ª–∞–º—É 90 —Ä–∞–∑ –≤ —á–∞—Ç–µ –∏ 15 —Ä–∞–∑ –≤ –∫–∞–Ω–∞–ª–µ, –º–µ—Å—Ç–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã', reply_markup=keyboard)

async def auto_chat_cz():
    try:
        keyboard = InlineKeyboardMarkup()
        button = InlineKeyboardButton('–ò–Ω—Å—Ç–∞–≥—Ä–∞–º', url='https://instagram.com/icepeak.cz?igshid=YmMyMTA2M2Y=')
        button2 = InlineKeyboardButton('–¢–∏–∫–¢–æ–∫', url='https://www.tiktok.com/@icepeak.czech?_t=8WYtkzFrNfJ&_r=1')
        keyboard.add(button).add(button2)
        await bot.send_photo(chat_id=-1001869904593, photo='AgACAgQAAxkBAAIBGGNbw9YCAzlzYeYUY2qQCJdfyRdRAAKOvDEb7GrgUtCrBXavMlHZAQADAgADcwADKgQ', caption = f'ICEPEAK - –∫—É—Ä—Å—ã –ñ–ò–í–û–ì–û —á–µ—à—Å–∫–æ–≥–æ\n\n–ó–∞–≥–æ–≤–æ—Ä–∏ —É–∂–µ –Ω–∞ –ø–µ—Ä–≤–æ–º —É—Ä–æ–∫–µ!\n\n‚ùóÔ∏è–∏–¥—ë—Ç –Ω–∞–±–æ—Ä –≤ –≥—Ä—É–ø–ø—ã –ê1, –ê2 –∏ –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è‚ùóÔ∏è\n\n–û–§–§–õ–ê–ô–ù  –∏  –û–ù–õ–ê–ô–ù –≥—Ä—É–ø–ø—ã\n- –ê1, –ê2, B1 - 2800 kƒç/–º–µ—Å (8 –∑–∞–Ω—è—Ç–∏–π/–ø–æ–ª—Ç–æ—Ä–∞ —á–∞—Å–∞)\n\n–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï –ó–ê–ù–Ø–¢–ò–Ø:\n- –æ–Ω–ª–∞–π–Ω\n- –≥—Ä–∞—Ñ–∏–∫ –≥–∏–±–∫–∏–π, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ –í–∞—Å\n----------------------------------------\n- –í–∞—Å –∂–¥—É—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –ø–æ –∞–≤—Ç–æ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ. –ú—ã –Ω–∞—É—á–∏–º –í–∞—Å –ñ–ò–í–û–ú–£ —á–µ—à—Å–∫–æ–º—É, –Ω–∞—É—á–∏–º –ì–û–í–û–†–ò–¢–¨.\n\n- –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö: @icepeakcz –∏–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É\n+420774091027', reply_markup=keyboard)
    except Exception as _ex:
        await bot.send_message(632567149, str(_ex), 'auto_cahat_cz')

async def auto_reclama():
    try:
        keyboard = InlineKeyboardMarkup()
        button2 = InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å', url='https://t.me/alltruiist')
        keyboard.add(button2)
        await bot.send_message(chat_id=-1001869904593, text= f'–†–∞–∑–≤–∏–≤–∞–µ—Ç–µ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å?. –ù—É–∂–Ω—ã –∑–∞–∫–∞–∑—ã?\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –∑–∞ 500 –∫—Ä–æ–Ω –º—ã –≤—ã–ª–æ–∂–∏–º –≤–∞—à—É —Ä–µ–∫–ª–∞–º—É 90 —Ä–∞–∑ –≤ —á–∞—Ç–µ –∏ 30 —Ä–∞–∑ –≤ –∫–∞–Ω–∞–ª–µ, –º–µ—Å—Ç–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã', reply_markup=keyboard)

    except Exception as _ex:
        await bot.send_message(632567149, str(_ex), 'auto_cahat_cz')

async def adss():
    try:
        keyboard = InlineKeyboardMarkup()
        button = InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ', url='https://telegra.ph/Uroki-po-Python-10-25')
        button2 = InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ª—Å', url='https://t.me/alltruiist')
        keyboard.add(button).add(button2)
        await bot.send_photo(chat_id=-1001869904593, photo='AgACAgQAAxkBAAI5DmNZElAqd5qFvJSVb6xQxRozAb1hAAJctzEbkZPBUscvVFC3D-LIAQADAgADcwADKgQ', caption = f'<b>–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ –Ω–µ –∑–Ω–∞–µ—à—å —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å? </b> <tg-spoiler> <i> \n\n–Ø —Å–æ–∑–¥–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ —á–∞—Ç–∞ –∏ –±–æ—Ç–∞ –æ—Ç –∏–º–µ–Ω–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–º–æ–≥–∞—é –Ω–æ–≤–∏—á–∫–∞–º –æ—Å–≤–æ–∏—Ç—Å—è –≤ —Å—Ñ–µ—Ä–µ IT —Å –Ω—É–ª—è. </i> </tg-spoiler> \n\n–ü—Ä–æ–≤–µ–¥—É –æ—Ç —Å—Ç–∞–¥–∏–∏ "–•–æ—á—É –≤–æ–π—Ç–∏ –≤ IT –Ω–æ —É –º–µ–Ω—è –ª–∞–ø–∫–∏", –¥–æ –ø–µ—Ä–≤—ã—Ö –∫–µ–π—Å–æ–≤.\n\n–û–±—É—á–∞—é –Ω–∞–ø–∏—Å–∞–Ω–∏—é –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤, –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–≤, —Å–∞–π—Ç–æ–≤ –Ω–∞ Django,\n\n—Ç–∞–∫ –∂–µ –±–æ–Ω—É—Å–æ–º SQL, HTML. CSS.',parse_mode='HTML', reply_markup=keyboard)
    except Exception as _ex:
        await bot.send_message(632567149, str(_ex),' adss')

async def scheduler_chat():
    time_chat = ['8:00','10:00','14:00','16:00','18:00']
    for time in time_chat:
        aioschedule.every().day.at(time).do(auto_chat)
    
    time_chat_cz = ['8:30','10:30','14:30','16:30','18:30']
    for time in time_chat_cz:
        aioschedule.every().day.at(time).do(auto_chat_cz)
    
    time_adss = ['7:20','8:20','9:20','10:20','11:20','12:20','13:20','14:20','15:20','16:20','17:20','18:20','19:20','20:20']
    for time in time_chat_cz:
        aioschedule.every().day.at(time).do(auto_reclama)
    
    time_adss = ['9:00','11:00','15:00','17:00','19:00']
    for time in time_adss:
        aioschedule.every().day.at(time).do(adss)

    time_adss = ['7:10','8:10','9:10','10:10','11:10','12:10','13:10','14:10','15:10','16:10','17:10','18:10','19:10','20:10']
    for time in time_adss:
        aioschedule.every().day.at(time).do(auto_rabota)


    aioschedule.every().day.at('18:20').do(auto_channel)
    while True:
        await aioschedule.run_pending()
        await asyncio.sleep(1)
    
    
async def on_shutdown(dp): 
    await bot.delete_webhook()
    cur.close()
    base.close()


from handlers import admin, client, other, work

admin.register_handlers_admin(dp)
client.register_handlers_client(dp)
work.register_handlers_work(dp)
other.register_handlers_other(dp)

executor.start_webhook(
    dispatcher = dp,
    webhook_path='',
    on_startup=on_startup,
    on_shutdown=on_shutdown,
    skip_updates=True,
    host="0.0.0.0",
    port=int(os.environ.get("PORT", 5000)))